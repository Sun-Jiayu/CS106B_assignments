Before submitting this file, make sure that there are no more TODO
placeholders remaining in the file (and remove this comment too).

Perfect Numbers
---------------

Before submitting this file, make sure that there are no more TODO
placeholders remaining in the file (and remove this comment too).

Q1. Roughly how long did it take your computer to do the search? How many perfect numbers were found and what were they?
A1. About 1 sec. Four perfect numbers were found, they are 6, 28, 496 and 8128.

Q2. Record the timing results for `findPerfects` that you observed into a table.
A2. When the input number is 240000, the operation time is 57.332 sec, which approaches 1 min.

Q3. Does it take the same amount of work to compute `isPerfect` on the number 10 as it does on the number 1000? Why or why not? Does it take the same amount of work for `findPerfects` to search the range of numbers from 1-1000 as it does to search the numbers from 1000-2000? Why or why not?
A3. No,it doesn't. Because 1000-2000 also should judge the divisor in the range of 1-1000,which is repetitive work.

Q4. Extrapolate from the data you gathered and make a prediction: how long will it take `findPerfects` to reach the fifth perfect number?
A4. According to the data, time and the input number roughly match t =E-09x^2+2E-06x+0.161.
Therefore, it will take about 13 days to find the fifth perfect number.

Q5. Do any of the tests still pass even with this broken function? Why or why not?
A5. Reverse testing still passes. Because the conditions for reverse testing are relatively broad.

Q6. Describe the testing strategy you used for your test cases to confirm `smarterSum` is working correctly.
A6. Do equal test for `smarterSum` and `divisorSum`. 

Q7. Record your timing results for `findPerfectsSmarter` into a table.
A7. input number:    960000        1920000        3840000        7680000
      time consumed:  5.789 secs  14.826 secs   39.494 secs    105.898 secs

Q8. Make a prediction: how long will `findPerfectsSmarter` take to reach the fifth perfect number?
A8. According to the data, the input number and time consumed roughly meet the linear function relationship( t = 2E-05x-13.03 ).
Therefore, it will take about 10 mins.

Q9. Explain how you chose your specific test cases and why they lead you to be confident `findNthPerfectEuclid` is working correctly.
A9. As the Nth Perfect number is known, i chose to do equal test beween findNthPerfectEuclid and the Nth Perfect number. All the four tests can work correctly.
Soundex
-------

Q10. What is the Soundex code for "Angelou"? What is the code for your own surname?
A10. The Soundex code for "Angelou" is A524. The code for my own surname is S500.

Q11. Before writing any code, brainstorm your plan of attack and sketch how you might decompose the work into smaller tasks. Briefly describe your decomposition strategy.
A11. Firstly, build a function removeNonLetters to remove the non-letters in the surnames. Then, build a function soundex to calculate the soundex  of each surname. Finally, build a function soundexSearch to search the soundex of each name in the databaseNames.
 
Q12. Think about one or more examples of a class of names that the Soundex system might not work well for. Explain what this class of names is and why the system might incorrectly group them or mis-categorize one of the names.
A12. Not so clear.

Q13. Suppose you are a software engineer working for the U.S. government. You have been tasked with implementing a system that collects names as part of the Census survey and analyzes these names using a phonetic algorithm. Your boss suggests using Soundex and notes that the algorithm is only expected to work for ASCII-encoded strings, since supporting Unicode would require extra work and time. What would your response be and why? What representational harms might result from building a system that exclusively uses Soundex and/or ASCII?
A13. Not so clear.


